{"version":3,"sources":["description.module.css","description.jsx","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["module","exports","Description","className","s","description","App","useState","articles","setArticles","article","setArticle","articleEditing","setArticleEditing","editingArticle","setEditingArticle","useForm","register","handleSubmit","errors","useEffect","json","localStorage","getItem","loadedTodos","JSON","parse","stringify","setItem","page__row","page__cell","onSubmit","e","newElement","id","Date","getTime","text","completed","concat","textarea","type","name","onChange","target","value","ref","required","maxLength","hide","htmlFor","inputTextLabel","reverse","map","element","el","checked","updatedArticles","toggleComplete","textElement","todoActions","onClick","submitEdits","submitEditsLabel","filter","deleteArticle","deleteArticleLabel","setArticleEditingLabel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,YAAc,mC,sKCWjBC,EATK,WAClB,OACQ,qBAAKC,UAAWC,IAAEC,YAAlB,gTC4HKC,EA3HH,WAAO,IAAD,EAEgBC,mBAAS,IAFzB,mBAETC,EAFS,KAECC,EAFD,OAGcF,mBAAS,IAHvB,mBAGTG,EAHS,KAGAC,EAHA,OAI4BJ,mBAAS,MAJrC,mBAITK,EAJS,KAIOC,EAJP,OAK4BN,mBAAS,IALrC,mBAKTO,EALS,KAKOC,EALP,OAMyBC,cAAlCC,EANS,EAMTA,SAAUC,EAND,EAMCA,aAAcC,EANf,EAMeA,OAE/BC,qBAAU,WACR,IAAMC,EAAOC,aAAaC,QAAQ,YAC5BC,EAAcC,KAAKC,MAAML,GAC3BG,GACFf,EAAYe,KAEb,IAEHJ,qBAAU,WACR,IAAMC,EAAOI,KAAKE,UAAUnB,GAC5Bc,aAAaM,QAAQ,WAAYP,KAChC,CAACb,IAuCF,OACC,qBAAKL,UAAWC,IAAEyB,UAAlB,SACK,sBAAK1B,UAAWC,IAAE0B,WAAlB,UACE,8BACE,cAAC,EAAD,MAEA,uBAAMC,SAAUb,GA3CX,SAACc,GAEhB,IAAMC,EAAa,CACjBC,IAAI,IAAIC,MAAOC,UACfC,KAAM3B,EACN4B,WAAW,GAEb7B,EAAY,YAAID,GAAU+B,OAAON,IACjCtB,EAAW,OAmCD,UACA,0BACCR,UAAWC,IAAEoC,SACbC,KAAK,OACLC,KAAK,WACLC,SAAU,SAACX,GAAD,OAAOrB,EAAWqB,EAAEY,OAAOC,QACrCC,IAAK7B,EAAS,CAAC8B,UAAU,EAAMC,UAAW,MAC1CH,MAAOnC,IAEPS,EAAOqB,UAAqC,aAAzBrB,EAAOqB,SAASC,MAAwB,kDAC3DtB,EAAOqB,UAAqC,cAAzBrB,EAAOqB,SAASC,MAAyB,uDAC7D,gCACA,uBAAOA,KAAK,SAASI,MAAM,SAASX,GAAG,eAAe/B,UAAWC,IAAE6C,OACnE,uBAAOC,QAAQ,eAAe/C,UAAWC,IAAE+C,eAA3C,0BAGE,YAAI3C,GAAU4C,UAAUC,KAAI,SAACC,GAAD,OAC5B,gCACG,sBAAKnD,UAAWC,IAAEmD,GAAlB,UACI,uBACCd,KAAK,WACLP,GAAG,YACHsB,QAASF,EAAQhB,UACjBK,SAAU,kBAlDT,SAACT,GACtB,IAAIuB,EAAkB,YAAIjD,GAAU6C,KAAI,SAACC,GAIvC,OAHIA,EAAQpB,KAAOA,IACjBoB,EAAQhB,WAAagB,EAAQhB,WAExBgB,KAET7C,EAAYgD,GA2CwBC,CAAeJ,EAAQpB,OAEvCoB,EAAQpB,KAAOtB,EAChB,uBACCT,UAAWC,IAAEW,kBACb0B,KAAK,OACLE,SAAU,SAACX,GAAD,OAAOjB,EAAkBiB,EAAEY,OAAOC,UAG7C,qBAAK1C,UAAWC,IAAEuD,YAAlB,SAAgCL,EAAQjB,UAExC,sBAAKlC,UAAWC,IAAEwD,YAAlB,UACHN,EAAQpB,KAAOtB,EAChB,8BACA,uBACGiD,QAAS,kBAvDT,SAAC3B,GACnB,IAAMuB,EAAkB,YAAIjD,GAAU6C,KAAI,SAACC,GAIzC,OAHIA,EAAQpB,KAAOA,IACjBoB,EAAQjB,KAAOvB,GAEVwC,KAET7C,EAAYgD,GACZ5C,EAAkB,MA+CeiD,CAAYR,EAAQpB,KACnC/B,UAAWC,IAAE2D,iBAFhB,4BAKA,8BACA,uBACIF,QAAS,kBA5ER,SAAC3B,GACrB,IAAIuB,EAAkB,YAAIjD,GAAUwD,QAAO,SAACV,GAAD,OAAaA,EAAQpB,KAAOA,KACvEzB,EAAYgD,GA0EsBQ,CAAcX,EAAQpB,KACrC/B,UAAWC,IAAE8D,mBAFjB,sBAKA,uBACKL,QAAS,kBAAMhD,EAAkByC,EAAQpB,KACzC/B,UAAWC,IAAE+D,uBAFlB,uBA/BOb,EAAQpB,aC3EnBkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfApE,EAAOC,QAAU,CAAC,SAAW,sBAAsB,WAAa,wBAAwB,SAAW,sBAAsB,KAAO,kBAAkB,GAAK,gBAAgB,YAAc,yBAAyB,uBAAyB,oCAAoC,mBAAqB,gCAAgC,iBAAmB,8BAA8B,eAAiB,+B","file":"static/js/main.f11ffe9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"description_description__1rYNS\"};","import React from 'react';\r\nimport s from './description.module.css';\r\n\r\nconst Description = () => {\r\n  return (\r\n          <div className={s.description}>\r\n                 В этом приложении акцент сделан на HOOK-и: useState и useEffect.\r\n                 Ссылка на код: \r\n          </div>\r\n  )\r\n}\r\n\r\nexport default Description;","import s from './App.module.css';\nimport React, {useState, useEffect} from 'react'\nimport {useForm} from 'react-hook-form';\nimport Description from './description';\n\n\nconst App = () => {\n\n  const [articles, setArticles] = useState([]);\n  const [article, setArticle] = useState(\"\");\n  const [articleEditing, setArticleEditing] = useState(null);\n  const [editingArticle, setEditingArticle] = useState(\"\");\n  const {register, handleSubmit, errors} = useForm();\n\n  useEffect(() => {\n    const json = localStorage.getItem(\"articles\");\n    const loadedTodos = JSON.parse(json);\n    if (loadedTodos) {\n      setArticles(loadedTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    const json = JSON.stringify(articles);\n    localStorage.setItem(\"articles\", json);\n  }, [articles]);\n\n  const onSubmit = (e) => {\n\n    const newElement = {\n      id: new Date().getTime(),\n      text: article,\n      completed: false,\n    };\n    setArticles([...articles].concat(newElement));\n    setArticle(\"\");\n  }\n\n  const deleteArticle = (id) => {\n    let updatedArticles = [...articles].filter((element) => element.id !== id);\n    setArticles(updatedArticles);\n  }\n\n  const toggleComplete = (id) => {\n    let updatedArticles = [...articles].map((element) => {\n      if (element.id === id) {\n        element.completed = !element.completed;\n      }\n      return element;\n    });\n    setArticles(updatedArticles);\n  }\n\n  const submitEdits = (id) => {\n    const updatedArticles = [...articles].map((element) => {\n      if (element.id === id) {\n        element.text = editingArticle;\n      }\n      return element;\n    });\n    setArticles(updatedArticles);\n    setArticleEditing(null);\n  }\n\n    return (\n     <div className={s.page__row}>\n          <div className={s.page__cell}>\n            <div>\n              <Description/>\n            </div>\n              <form onSubmit={handleSubmit(onSubmit)}>\n              <textarea\n               className={s.textarea}\n               type=\"text\"\n               name='textarea'\n               onChange={(e) => setArticle(e.target.value)}\n               ref={register({required: true, maxLength: 300})}\n               value={article}\n              />\n              {errors.textarea && errors.textarea.type === 'required' && (<p>Field is required</p>)}\n              {errors.textarea && errors.textarea.type === 'maxLength' && (<p>Max length 150 simbols</p>)}\n              <div>\n              <input type='submit' value='submit' id='inputArticle' className={s.hide}/>\n              <label htmlFor=\"inputArticle\" className={s.inputTextLabel}>Submit</label>\n              </div>\n              </form>\n              { [...articles].reverse().map((element) => (\n                <div key={element.id}>\n                   <div className={s.el}>\n                       <input\n                        type=\"checkbox\"\n                        id=\"completed\"\n                        checked={element.completed}\n                        onChange={() => toggleComplete(element.id)}\n                       />\n                       {element.id === articleEditing ? (\n                       <input\n                        className={s.setEditingArticle}\n                        type=\"text\"\n                        onChange={(e) => setEditingArticle(e.target.value)}\n                       /> \n                       ) : (\n                       <div className={s.textElement}>{element.text}</div>)}\n                   </div>\n                       <div className={s.todoActions}>\n                   {element.id === articleEditing ? (\n                   <div>\n                   <label \n                      onClick={() => submitEdits(element.id)} \n                      className={s.submitEditsLabel}>Submit Edits</label>\n                   </div>\n                   ) : ( \n                   <div>\n                   <label \n                       onClick={() => deleteArticle(element.id)} \n                       className={s.deleteArticleLabel}>Delete</label>\n                   </div>\n                   )}\n                   <label \n                        onClick={() => setArticleEditing(element.id)} \n                        className={s.setArticleEditingLabel}>Edit</label>\n                   </div>\n                </div>\n              ))}\n          </div>\n     </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"clearFix\":\"App_clearFix__2dhGJ\",\"page__cell\":\"App_page__cell__2Rl4N\",\"textarea\":\"App_textarea__2tofp\",\"hide\":\"App_hide__2eKbX\",\"el\":\"App_el__Yf8hH\",\"textElement\":\"App_textElement__1sGkO\",\"setArticleEditingLabel\":\"App_setArticleEditingLabel__23AYT\",\"deleteArticleLabel\":\"App_deleteArticleLabel__3nDNW\",\"submitEditsLabel\":\"App_submitEditsLabel__2Dxgi\",\"inputTextLabel\":\"App_inputTextLabel__3ZILv\"};"],"sourceRoot":""}